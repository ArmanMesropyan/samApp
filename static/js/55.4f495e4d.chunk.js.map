{"version":3,"file":"static/js/55.4f495e4d.chunk.js","mappings":"0MAoEA,EAhEkB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACXC,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXC,MAAO,GACPC,SAAU,IAEdC,iBAAkBC,EAAAA,GAAW,CACzBH,MAAOG,EAAAA,KACFH,MAAM,yBACNI,IAAI,GAAI,yBACRC,IAAI,EAAG,wBACPC,SAAS,yBACdL,SAAUE,EAAAA,KACLC,IAAI,GAAI,yBACRC,IAAI,EAAG,wBACPC,SAAS,2BAElBV,SAAU,SAAAW,GACN,OAAOX,EAASW,MAKxB,OACI,kBAAMC,UAAU,eAAeZ,SAAUC,EAAOY,aAAhD,WAEI,iBAAKD,UAAU,qBAAf,WACI,kBAAOE,QAAQ,WAAf,uBACA,kBACIF,UAAWX,EAAOc,QAAQX,OAAUH,EAAOe,OAAOZ,MAAQ,iCAAmC,KAC7Fa,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,SAAUnB,EAAOoB,aACjBC,OAAQrB,EAAOsB,WACfC,MAAOvB,EAAOU,OAAOP,QAExBH,EAAOc,QAAQX,OAASH,EAAOe,OAAOZ,OACnC,gBAAKQ,UAAU,qBAAf,SAAqCX,EAAOe,OAAOZ,QAAe,SAE1E,iBAAKQ,UAAU,qBAAf,WACI,kBAAOE,QAAQ,WAAf,uBACA,kBACIF,UAAWX,EAAOc,QAAQV,UAAYJ,EAAOe,OAAOX,SAAW,oCAAsC,KACrGY,GAAG,WACHC,KAAK,WACLC,KAAK,WACLC,SAAUnB,EAAOoB,aACjBC,OAAQrB,EAAOsB,WACfC,MAAOvB,EAAOU,OAAON,WAExBJ,EAAOc,QAAQV,UAAYJ,EAAOe,OAAOX,UACtC,gBAAKO,UAAU,qBAAf,SAAqCX,EAAOe,OAAOX,WAAkB,SAE7E,iBAAKO,UAAU,2CAAf,WACI,kBAAOO,KAAK,cACZ,8CAEJ,gBAAKP,UAAU,mBAAf,UACI,mBAAQO,KAAK,SAAb,0B,8BC/BhB,EAxBc,WACZ,IAAMM,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,KAAKJ,UAChDK,GAAYC,EAAAA,EAAAA,MAQlB,OAAGN,GACM,SAAC,KAAD,CAAUO,GAAG,cAGpB,iBAAKpB,UAAU,2BAAf,WACE,eAAIA,UAAU,gBAAd,oBACA,iBAAKA,UAAU,eAAf,WACI,6DACA,kDAEJ,SAAC,EAAD,CAAWZ,SAjBE,SAACiC,GAChB,IAAMJ,EAAM,CACVzB,MAAM6B,EAAS7B,MACfC,SAAS4B,EAAS5B,UAEpByB,GAASI,EAAAA,EAAAA,IAAQL","sources":["components/login/components/loginForm/index.jsx","components/login/index.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport './index.scss'\r\nconst LoginForm = ({ onSubmit }) => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        validationSchema: Yup.object({\r\n            email: Yup.string()\r\n                .email('Invalid email address')\r\n                .max(30, 'maximum characters 30')\r\n                .min(5, 'minimum characters 5')\r\n                .required('field cannot be empty'),\r\n            password: Yup.string()\r\n                .max(30, 'maximum characters 30')\r\n                .min(5, 'minimum characters 5')\r\n                .required('field cannot be empty'),\r\n        }),\r\n        onSubmit: values => {\r\n            return onSubmit(values)\r\n        },\r\n\r\n    });\r\n\r\n    return (\r\n        <form className='L-login-form' onSubmit={formik.handleSubmit}>\r\n\r\n            <div className='L-login-form-input'>\r\n                <label htmlFor=\"username\">username</label>\r\n                <input\r\n                    className={formik.touched.email &&  formik.errors.email ? 'L-login-form-input-error-email' : null}\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.email}\r\n                />\r\n                {formik.touched.email && formik.errors.email ?\r\n                    <div className='L-login-form-error'>{formik.errors.email}</div> : null}\r\n            </div>\r\n            <div className='L-login-form-input'>\r\n                <label htmlFor=\"password\">password</label>\r\n                <input\r\n                    className={formik.touched.password && formik.errors.password ? 'L-login-form-input-error-password' : null}\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.password}\r\n                />\r\n                {formik.touched.password && formik.errors.password ?\r\n                    <div className='L-login-form-error'>{formik.errors.password}</div> : null}\r\n            </div>\r\n            <div className='L-login-form-check G-flex G-align-center'>\r\n                <input type=\"checkbox\" />\r\n                <span>Remember Me</span>\r\n            </div>\r\n            <div className='L-login-form-btn'>\r\n                <button type='submit'>Submit</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default LoginForm","import React from 'react'\r\nimport LoginForm from './components/loginForm'\r\nimport './index.scss'\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginTC } from '../../redux/reducers/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Login = () => {\r\n  const isAuth = useSelector((state) => state.auth.data.isAuth)\r\n  const dispatch =  useDispatch()\r\n  const onSubmit = (formData) => {\r\n    const data ={\r\n      email:formData.email,\r\n      password:formData.password\r\n    }\r\n    dispatch(loginTC(data))\r\n  }\r\n  if(isAuth){\r\n    return <Redirect to='/profile'/>\r\n  }\r\n  return (\r\n    <div className='G-container L-Login-page'>\r\n      <h2 className='L-login-title'>Login</h2>\r\n      <div className='L-login-data'>\r\n          <p>Login: mesropyanarman4@gmail.com</p>\r\n          <p>Password: 140240aa</p>\r\n      </div>\r\n      <LoginForm onSubmit={onSubmit}/>\r\n    </div>\r\n  )\r\n}\r\nexport default Login"],"names":["onSubmit","formik","useFormik","initialValues","email","password","validationSchema","Yup","max","min","required","values","className","handleSubmit","htmlFor","touched","errors","id","name","type","onChange","handleChange","onBlur","handleBlur","value","isAuth","useSelector","state","auth","data","dispatch","useDispatch","to","formData","loginTC"],"sourceRoot":""}