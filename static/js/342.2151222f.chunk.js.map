{"version":3,"file":"static/js/342.2151222f.chunk.js","mappings":"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","sources":["components/content/profile/components/profileInfo/components/profile-status/index.jsx","components/content/profile/components/profileInfo/index.jsx","components/content/profile/components/myPosts/post/index.jsx","components/content/profile/components/myPosts/index.jsx","components/content/profile/components/index.jsx","components/content/profile/container/index.js","hoc/withAuthRedirect.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport './index.scss'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nconst ProfileStatus = (props) => {\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [status, setStatus] = useState(props.status)\r\n  const dispatch = useDispatch()\r\n  const activeEditMode = () => {\r\n    setEditMode(!editMode)\r\n  }\r\n  const deActiveEditMode = () => {\r\n    setEditMode(!editMode)\r\n    dispatch(props.updateStatus(status))\r\n  }\r\n  const onStatusChange = (e) => {\r\n    let newStatus = e.currentTarget.value\r\n    setStatus(newStatus)\r\n  }\r\n\r\n  return (\r\n    <div className='L-profile-status'>\r\n      {!editMode\r\n        ? <div className='L-status-child'>\r\n          <span onClick={activeEditMode}>{props.status || 'my status'}</span>\r\n        </div>\r\n        : <div className='L-status-child'>\r\n          <input\r\n            autoFocus={true}\r\n            onBlur={deActiveEditMode}\r\n            onChange={onStatusChange}\r\n            type=\"text\"\r\n            value={status} />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\nexport default ProfileStatus","import React from 'react'\r\nimport './index.scss'\r\nimport Preloader from './../../../../../common/preloader/index';\r\nimport img from '../../../../../assets/img/236831.png'\r\nimport contentImg from '../../../../../assets/posts/img/Landscape-Color.jpg'\r\nimport ProfileStatus from './components/profile-status';\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <div className=\"profilePreloader\"><Preloader /></div>\r\n  }\r\n  return (\r\n    <div className='L-profile-info '>\r\n      <div className=\"L-profile-info-cover\"\r\n        style={{\r\n          backgroundImage: `url('${contentImg}')`\r\n        }}\r\n      />\r\n      <div className=\"L-profile-info-content G-flex G-align-center\">\r\n        <div className=\"L-profile-info-child\">\r\n          <img src={!props.profile.photos.small ? img : props.profile.photos.small} alt=\"img\" />\r\n          <ProfileStatus \r\n          status={props.status}\r\n          updateStatus={props.updateStatus}/>\r\n        </div>\r\n        <div className=\"L-profile-info-child\">\r\n          <div className='L-profile-about-me'>\r\n            About Me::{!props.profile.aboutMe ? ' ***' : props.profile.aboutMe}\r\n          </div>\r\n          <div className='L-profile-about-me'>\r\n            Full Name::{!props.profile.fullName ? ' ***' : !props.profile.fullName}\r\n          </div>\r\n          <div className='L-profile-about-me'>\r\n            Job Description::{!props.profile.lookingForAJobDescription ? ' ***'\r\n              : props.profile.lookingForAJobDescription}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default ProfileInfo","import React from 'react'\r\nimport './index.scss'\r\nimport man from '../../../../../../assets/posts/img/icon.png'\r\n const Post = ({message , likesCount}) => {\r\n  return (\r\n    <div className='L-posts'>\r\n    <div className='L-post-item G-flex G-align-center'>\r\n            <img src={man} alt=\"img\" style={{\r\n              width:'50px'\r\n            }}/>\r\n            <p>{message}</p>\r\n           \r\n    </div>\r\n    <b className='L-post-like'>Like {likesCount}</b>\r\n</div>\r\n  )\r\n}\r\nexport default Post\r\n","import React from 'react'\r\nimport './index.scss'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Post from './post/index';\r\nimport { addPosts, updatePosts } from '../../../../../redux/reducers/profile-reducer';\r\nconst MyPost = () => {\r\n  const profile = useSelector((state) => state.profileReducer)\r\n  const dispatch = useDispatch()\r\n  const posts = profile.posts\r\n  let nePostText = profile.newPostText\r\n  const addPost = () => {\r\n    if(nePostText){\r\n      dispatch(addPosts())\r\n    }\r\n   \r\n  }\r\n  let textChange = (e) => {\r\n    let text = e.target.value\r\n    dispatch(updatePosts(text))\r\n\r\n\r\n  }\r\n  let postsItem = posts.map(post => <Post\r\n    key={post.id}\r\n    message={post.message}\r\n    likesCount={post.likesCount} />)\r\n  \r\n\r\n  return (\r\n    <div className='L-my-posts '>\r\n      <>\r\n        <div className='L-title-posts'>My Posts</div>\r\n        <div className='L-edit-posts G-flex'>\r\n          <textarea\r\n            placeholder='Enter Your Message'\r\n            onChange={textChange}\r\n            value={nePostText}\r\n          ></textarea>\r\n          <button onClick={addPost}>Add</button>\r\n        </div>\r\n        <div className='L-posts-items G-flex G-flex-wrap '>\r\n          {postsItem}\r\n        </div>\r\n      </>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyPost","import React from 'react'\r\nimport ProfileInfo from './profileInfo/index';\r\nimport MyPost from './myPosts/index';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className='G-container ' >\r\n      <ProfileInfo \r\n        profile={props.profile}\r\n        status={props.status} \r\n        updateStatus={props.updateProfileStatusTC} />\r\n      <MyPost/>\r\n    </div>\r\n  )\r\n}\r\nexport default Profile","import React, { useEffect } from \"react\"\r\nimport Profile from \"../components\"\r\nimport withAuthRedirect from './../../../../hoc/withAuthRedirect';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {  profileTC , \r\n          profileStatusTC ,\r\n          updateProfileStatusTC} from '../../../../redux/reducers/profile-reducer';\r\nimport { compose } from \"redux\";\r\nimport {  withRouter } from \"react-router-dom\";\r\n\r\nconst ProfileContainer = (props) => {\r\n    const dispatch = useDispatch()\r\n    const profile = useSelector((state) => state.profileReducer.profile)\r\n    const status = useSelector((state) => state.profileReducer.status)\r\n    const authUserId = useSelector((state) => state.auth.data.id)\r\n    useEffect(()=>{\r\n        let userId = props.match.params.userId\r\n        if(!userId ){\r\n          userId = authUserId\r\n          if(!userId){\r\n            props.history.push('/login')\r\n          }\r\n          }\r\n          dispatch(profileTC(userId))\r\n          dispatch(profileStatusTC(userId))\r\n    },[])\r\n\r\n    return <Profile \r\n            profile={profile}\r\n            status={status}\r\n            updateProfileStatusTC={updateProfileStatusTC}/>\r\n}\r\n\r\n\r\nexport default compose(\r\n  withRouter,\r\n  withAuthRedirect \r\n)(ProfileContainer)\r\n","import React  from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nfunction withAuthRedirect(Component) {\r\n    function ComponentRedirect(props) {\r\n        const isAuth = useSelector((state) => state.auth.data.isAuth)\r\n            if (!isAuth) {\r\n                return <Redirect to=\"/login\"/>\r\n            }\r\n            return   <Component { ...props}/>\r\n    }\r\n    return ComponentRedirect;\r\n}\r\nexport default withAuthRedirect"],"names":["props","useState","editMode","setEditMode","status","setStatus","dispatch","useDispatch","className","autoFocus","onBlur","updateStatus","onChange","e","newStatus","currentTarget","value","type","onClick","profile","style","backgroundImage","contentImg","src","photos","small","img","alt","aboutMe","fullName","lookingForAJobDescription","message","likesCount","man","width","useSelector","state","profileReducer","posts","nePostText","newPostText","postsItem","map","post","id","placeholder","text","target","updatePosts","addPosts","updateProfileStatusTC","compose","withRouter","withAuthRedirect","authUserId","auth","data","useEffect","userId","match","params","history","push","profileTC","profileStatusTC","Component","isAuth","to"],"sourceRoot":""}